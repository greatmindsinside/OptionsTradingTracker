.inputGroup {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text);
  line-height: var(--line-height-tight);
}

.required {
  color: var(--color-error-600);
  margin-left: var(--space-1);
}

.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  transition: var(--transition-fast);
}

.inputWrapper:focus-within {
  border-color: var(--color-border-focus);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.inputWrapper.error {
  border-color: var(--color-error-600);
}

.inputWrapper.error:focus-within {
  border-color: var(--color-error-600);
  box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
}

.input {
  flex: 1;
  padding: var(--space-3) var(--space-4);
  border: none;
  background: transparent;
  font-size: var(--font-size-base);
  color: var(--color-text);
  line-height: var(--line-height-normal);
}

.input:focus {
  outline: none;
}

.input:disabled {
  color: var(--color-text-muted);
  cursor: not-allowed;
}

.input::placeholder {
  color: var(--color-text-muted);
}

.prefix,
.suffix {
  padding: 0 var(--space-3);
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  background: var(--color-surface-secondary);
  border-radius: var(--radius-sm);
  margin: var(--space-1);
}

.prefix {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.suffix {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.errorMessage {
  font-size: var(--font-size-sm);
  color: var(--color-error-600);
  line-height: var(--line-height-normal);
}
